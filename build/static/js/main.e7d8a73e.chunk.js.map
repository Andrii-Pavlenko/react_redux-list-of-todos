{"version":3,"sources":["components/redux/Actions.js","components/redux/Reducer.js","components/redux/Store.js","components/redux/Selectors.js","context.js","components/User.js","components/TodoItem.js","components/TodoList.js","components/Buttons.js","App.js","index.js"],"names":["ACTION_TYPES","SAVE","SET_LOAD_ERROR","START_LOADING","STOP_LOADING","DELETE_TODO","SORT_TODOS","sortTodos","sorter","dispatch","type","payload","switcher","todoDelete","todoId","deleteTodo","urls","todosURL","promises","map","url","fetch","then","y","json","Promise","all","results","data","catch","error","setError","message","finally","initialState","isLoading","initialized","preparedTodos","prepare","_preparedTodos","Object","slicedToArray","todos","users","todo","objectSpread2","user","find","userId","id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","state","arguments","length","undefined","action","filter","item","sort","a","b","name","localeCompare","title","completed","applyMiddleware","apply","rootSelector","selectList","createSelector","_ref","selectListError","_ref2","selectIsLoading","_ref3","TodosContext","React","createContext","ForButtonsContext","User","react_default","createElement","TodoItem","components_User","className","Consumer","value","Button","icon","Icon","onClick","TodoList","components_TodoItem","key","Buttons","Fragment","loadData","App","Provider","components_Buttons","components_TodoList","color","Enhanced","connect","stopLoading","defaultProps","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.e7d8a73e.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE: 'SAVE',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  DELETE_TODO: 'DELETE_TODO',\n  SORT_TODOS: 'SORT_TODOS',\n};\n\nconst save = data => ({\n  type: ACTION_TYPES.SAVE,\n  payload: data,\n});\n\nconst setError = error => ({\n  type: ACTION_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nconst startLoading = () => ({\n  type: ACTION_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTION_TYPES.STOP_LOADING,\n});\n\nconst deleteTodo = todoId => ({\n  type: ACTION_TYPES.DELETE_TODO,\n  todoId,\n});\n\nconst switcher = sorter => ({\n  type: ACTION_TYPES.SORT_TODOS,\n  payload: sorter,\n});\n\nexport const sortTodos = sorter => (dispatch) => {\n  dispatch(switcher(sorter));\n};\n\nexport const todoDelete = todoId => (dispatch) => {\n  dispatch(deleteTodo(todoId));\n};\n\nconst urls = [\n  'https://jsonplaceholder.typicode.com/todos',\n  'https://jsonplaceholder.typicode.com/users',\n];\n\nexport const todosURL = () => (dispatch) => {\n  dispatch(startLoading());\n\n  const promises = urls.map(url => fetch(url).then(y => y.json()));\n\n  Promise.all(promises).then((results) => {\n    dispatch(save(results));\n  })\n    .catch(error => dispatch(setError(error.message)))\n    .finally(() => dispatch(stopLoading()));\n};\n","import { ACTION_TYPES } from './Actions';\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  initialized: false,\n  preparedTodos: null,\n};\n\nfunction prepare(preparedTodos) {\n  const [todos, users] = preparedTodos;\n\n  if (todos && users) {\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => todo.userId === user.id),\n    }));\n  }\n\n  return [];\n}\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        error: false,\n        preparedTodos: prepare(payload),\n      };\n    }\n\n    case ACTION_TYPES.SET_LOAD_ERROR: {\n      return {\n        ...state,\n        error: true,\n        preparedTodos: [],\n      };\n    }\n\n    case ACTION_TYPES.START_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case ACTION_TYPES.STOP_LOADING: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n\n    case ACTION_TYPES.DELETE_TODO: {\n      const { todoId } = action;\n\n      return {\n        ...state,\n        preparedTodos: state.preparedTodos.filter(item => item.id !== todoId),\n      };\n    }\n\n    case ACTION_TYPES.SORT_TODOS: {\n      const { payload } = action;\n\n      switch (payload) {\n        case 'byUser':\n          return {\n            ...state,\n            preparedTodos: state.preparedTodos.sort(\n              (a, b) => a.user.name.localeCompare(b.user.name)\n            ),\n          };\n        case 'byTitle':\n          return {\n            ...state,\n            preparedTodos: state.preparedTodos.sort(\n              (a, b) => a.title.localeCompare(b.title)\n            ),\n          };\n        case 'byStatus':\n          return {\n            ...state,\n            preparedTodos: state.preparedTodos.sort(\n              (a, b) => a.completed - b.completed\n            ),\n          };\n        default:\n          return {\n            ...state,\n            preparedTodos: state.preparedTodos,\n          };\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './Reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  || compose();\n\nconst middlewares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectList = createSelector(\n  rootSelector,\n  ({ preparedTodos }) => preparedTodos\n);\n\nexport const selectListError = createSelector(\n  rootSelector,\n  ({ error }) => error\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading\n);\n","import React from 'react';\n\nexport const TodosContext = React.createContext();\n\nexport const ForButtonsContext = React.createContext();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>\n    {user.name}\n  </td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { TodosContext } from '../context';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n\n    {todo.completed\n      ? (\n        <td className=\"positive\">\n          <i className=\"icon checkmark\" />\n          Approved\n        </td>\n      ) : (\n        <td className=\"negative\">\n          <i className=\"icon close\" />\n          In procces\n        </td>\n      )}\n    <td>\n      <TodosContext.Consumer>\n        {value => (\n          <Button icon>\n            <Icon\n              name=\"user delete\"\n              onClick={() => value.deleteTodo(todo.id)}\n            />\n          </Button>\n        )}\n      </TodosContext.Consumer>\n\n    </td>\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    user: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../context';\n\nconst TodoList = () => (\n  <table className=\"ui red table\">\n    <thead>\n      <tr>\n        <th>TODO item</th>\n        <th>The name of the user</th>\n        <th>Completed</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <TodosContext.Consumer>\n        {value => value.preparedTodos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </TodosContext.Consumer>\n    </tbody>\n  </table>\n);\n\nexport default TodoList;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { ForButtonsContext } from '../context';\n\nfunction Buttons() {\n  return (\n    <ForButtonsContext.Consumer>\n      {value => (\n        <>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byUser')}\n          >\n            By User!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byTitle')}\n          >\n            By Title!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byStatus')}\n          >\n            By Status!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.loadData()}\n          >\n            Refresh!\n          </Button>\n        </>\n      )}\n    </ForButtonsContext.Consumer>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  todosURL,\n  ACTION_TYPES,\n  todoDelete,\n  sortTodos,\n} from './components/redux/Actions';\nimport {\n  selectIsLoading,\n  selectList,\n  selectListError,\n} from './components/redux/Selectors';\nimport TodoList from './components/TodoList';\nimport Buttons from './components/Buttons';\nimport { TodosContext, ForButtonsContext } from './context';\nimport './App.css';\n\nconst App = ({\n  isLoading,\n  error,\n  preparedTodos,\n  loadData,\n  deleteTodo,\n  switcher,\n}) => {\n  if (isLoading) {\n    return <p>loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <>\n        <p>Error occurred!!!</p>\n        <Button\n          type=\"button\"\n          onClick={() => loadData(true)}\n        >\n            Try Again!\n        </Button>\n      </>\n    );\n  }\n\n  if (!preparedTodos) {\n    return (\n      <>\n        <p>No users and todos yet!</p>\n        <Button type=\"button\" onClick={() => loadData(true)} color=\"green\">\n            Load\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <ForButtonsContext.Provider value={{\n        switcher, loadData,\n      }}\n      >\n        <Buttons />\n      </ForButtonsContext.Provider>\n\n      <TodosContext.Provider value={{\n        preparedTodos, deleteTodo,\n      }}\n      >\n        <TodoList />\n      </TodosContext.Provider>\n    </div>\n  );\n};\n\nfunction mapState2Props(state) {\n  return {\n    preparedTodos: selectList(state),\n    error: selectListError(state),\n    isLoading: selectIsLoading(state),\n  };\n}\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: () => dispatch(todosURL()),\n  stopLoading: isLoading => dispatch({\n    type: ACTION_TYPES.STOP_LOADING,\n    isLoading,\n  }),\n  deleteTodo: todoId => dispatch(todoDelete(todoId)),\n  switcher: sorter => dispatch(sortTodos(sorter)),\n});\n\nconst Enhanced = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(App);\n\nexport { Enhanced as App };\n\nApp.propTypes = {\n  isLoading: PropTypes.bool,\n  error: PropTypes.bool,\n  preparedTodos: PropTypes.arrayOf(PropTypes.object),\n  loadData: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  switcher: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  preparedTodos: [],\n  error: false,\n  isLoading: false,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './components/redux/Store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}